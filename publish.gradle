apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'io.github.gradle-nexus.publish-plugin'

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

def buildVersion = "2.0.0-${System.env.BUILD_NUMBER ?: 'SNAPSHOT'}"
group = "uk.gov.ida"
version = "$buildVersion"
archivesBaseName = "verify-dev-pki"

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'Verify Dev PKI'
                packaging = 'jar'
                description = 'This repo contains keys and certificates for use in integration tests'
                url = 'https://github.com/alphagov/verify-dev-pki'
                artifactId = 'verify-dev-pki'

                scm {
                    url = 'https://github.com/alphagov/verify-dev-pki'
                    connection = 'scm:git:git://github.com/alphagov/verify-dev-pki.git'
                    developerConnection = 'scm:git:ssh://git@github.com:alphagov/verify-dev-pki.git'
                }

                licenses {
                    license {
                        name = 'MIT Licence'
                        url = 'https://github.com/alphagov/verify-dev-pki/blob/master/LICENCE'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        name = 'GDS Developers'
                    }
                }
            }
        }
    }
}

nexusPublishing {
    useStaging = true
    repositories {
        sonatype {
            // because we registered in Sonatype after 24 Feb 2021, we provide these URIs
            // see: https://github.com/gradle-nexus/publish-plugin/blob/master/README.md
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = System.getenv("SONATYPE_USERNAME")
            password = System.getenv("SONATYPE_PASSWORD")
        }
    }
}

signing {
    useInMemoryPgpKeys(
        System.getenv("MAVEN_CENTRAL_SIGNING_KEY"),
        System.getenv("MAVEN_CENTRAL_SIGNING_KEY_PASSWORD")
    )
    sign publishing.publications
}
