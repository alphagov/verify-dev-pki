plugins { id "com.jfrog.bintray" version "1.8.4" }
apply from: 'publish.gradle'
apply plugin: 'java-library'

repositories {
  if (System.getenv('VERIFY_USE_PUBLIC_BINARIES') == 'true') {
    logger.warn('Production builds MUST NOT be built with public binaries.\nUse artifactory/whitelisted-repos for production builds.\n\n')
    jcenter()
  }
  else {
    maven { url 'https://artifactory.ida.digital.cabinet-office.gov.uk/artifactory/whitelisted-repos' }
  }
}

dependencies {
  implementation  'com.google.guava:guava:24.1.1-jre',
                  'commons-io:commons-io:2.4'
}

sourceSets {
  java9 {
    if (JavaVersion.current() >= JavaVersion.VERSION_1_9) {
      java {
        srcDir 'src/main/java9'
      }
    }
  }
  java10 {
    if (JavaVersion.current() >= JavaVersion.VERSION_1_10) {
      java {
        srcDir 'src/main/java10'
      }
    }
  }
  java11 {
    if (JavaVersion.current() >= JavaVersion.VERSION_11) {
      java {
        srcDir 'src/main/java11'
      }
    }
  }
}

compileJava {
  if(JavaVersion.current() >= JavaVersion.VERSION_1_9) {
    options.compilerArgs.addAll(['--release', '8'])
  }
}

compileJava9Java {
  if(JavaVersion.current() >= JavaVersion.VERSION_1_9) {
    options.compilerArgs.addAll(['--release', '9'])
  }
}

compileJava10Java {
  if(JavaVersion.current() >= JavaVersion.VERSION_1_10) {
    options.compilerArgs.addAll(['--release', '10'])
  }
}

compileJava11Java {
  if(JavaVersion.current() >= JavaVersion.VERSION_11) {
    options.compilerArgs.addAll(['--release', '11'])
  }
}

jar {
  into('META-INF/versions/9') {
    from sourceSets.java9.output
  }
  into('META-INF/versions/10') {
    from sourceSets.java10.output
  }
  into('META-INF/versions/11') {
    from sourceSets.java11.output
  }
  manifest {
    if(JavaVersion.current() >= JavaVersion.VERSION_1_9) {
      attributes.put("Multi-Release", "true")
    }
  }
}
